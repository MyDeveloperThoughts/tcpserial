<Settings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="config.xsd">

    <ModemPool>
        <!-- You can leave Line out for outbound only system -->
        <Line port="6400"/>

        <!-- You can have multiple modems per ModemPool.  They will all share the same IP port for incoming calls.-->
        <!-- Modems all default to 38400 bps, unless specified-->

        <!-- To set up a Remote RS232 port, use the next line.-->
        <!--<Modem type="remote232" device="hostname:port">-->

        <!-- To set up an inbound port to act like the DCE side of a modem (e.g., for the VICE emulator), use the next line-->
        <!--<Modem type="ip232" port="25232">-->

        <Modem type="ip232" port="25232" speed="38400" playModemSounds="YES">
            <PhoneBookEntry number="101" value="bbs.example.org:6523"/>
            <PhoneBookEntry number="102" value="otherbbs.example.org:6523"/>

            <Initialization>s0=2</Initialization>
            <Initialization>s5=20</Initialization>        <!-- Delete key for Commodore is 20.  -->
            <!-- <Initialization>s5=8</Initialization>         Delete key for PC, Mac, Linux etc. computers is  8. -->

            <!-- Fun Modem Sounds -->
            <EventAction type="audio" action="dial" direction="local" content="audio\dial_tone.wav"/>
            <EventAction type="java" action="dial" direction="local" content="org.mdt.tcpmodem.hayes.dialaudio.DialAudioEventAction"/>
            <EventAction type="audio" action="dial" direction="local" content="audio\ring.wav"/>
            <EventAction type="audio" action="pre_connect" direction="local" content="audio\V90.wav"/>
            <EventAction type="audio" action="ring" direction="local" content="audio\ring6.wav" asynchronous="true"/>
            <EventAction type="audio" action="pre_answer" direction="local" content="audio\V90.wav"/>

            <!--
             Below are a few examples of EventActions, which replace simple Messages.
             o type can be one of:
                 file				send a local text file to inbound or outbound connection
                 url				send the data from a url to inbound or outbound connection
                 audio			play a references WAV audio file
                 java			run a java class and send output to inbound or outbound connection (content=classname)
                 exec			run local app and send output to inbound or oubound connection (not fully implemented yet)
             o action can be one of:
                 pre_answer	before CONNECT line is sent
                 answer		after CONNECT line is sent
                 pre_connect	before CONNECT line is sent
                 connect		after CONNECT line is sent
                 dial			when the modem goes to dial.
                 hangup		when the modem hangs up
                 busy			busy
                 no_answer	no answer
                 off_hook		modem is taken off hook
                 on_hook		modem is placed on hook
                 cmd_mode	modem is placed into command mode
                 data_mode	modem is placed into data mode
                 ring			RING signal is asserted
             o direction can be one of:
                 local			send data to modem side
                 remote		send data to line side
             o content
                 the URL, filename, application start, etc.  This can contain variables that are replaced
                 at time of execution.  For now, the following vars are supported:
                                 ${direction}	0 for none, 1 for outgoing, 2 for incoming
                                 ${speed}		speed of connection
                                 ${number}		for outgoing calls, this is the number/name dialed, incoming is last number
                                 ${number.method}	T for T, P for P, ' ' for default

                 If you would like more, let me know.  They are pretty easy to add
             o iterations is how many times to repeat this.  Only implemented on audio at present
             o asynchronous is whether system should wait for completion.  Only implemented on audio at present
                 true
                 false

             All template Actions are processed before any specific modem actions.

             You can have more than one EventAction per event.  They are processed in order listed in the file.
        -->
            <!--
            <EventAction type="file" action="pre_answer" direction="local" content="local_answer.txt"/>
            <EventAction type="url" action="answer" direction="remote" content="http://url.to.file"/>
            <EventAction type="audio" action="off_hook" direction="local" content="dialtone.wav" iterations="1" asynchronous="false"/>
            <EventAction type="audio" action="dial" direction="local" content="dtmf.wav" iterations="1" asynchronous="false"/>
            <EventAction type="audio" action="pre_connect" direction="local" content="negotiate.wav" iterations="1" asynchronous="false"/>
            <EventAction type="audio" action="connect" direction="local" content="ONLINE.wav" iterations="1" asynchronous="false"/>
            -->

        </Modem>
    </ModemPool>
</Settings>
